
package org.iringtools.mapping;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.iringtools.mapping package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.iringtools.mapping
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link OrdinalList }
     * 
     */
    public OrdinalList createOrdinalList() {
        return new OrdinalList();
    }

    /**
     * Create an instance of {@link Role }
     * 
     */
    public Role createRole() {
        return new Role();
    }

    /**
     * Create an instance of {@link GraphMap }
     * 
     */
    public GraphMap createGraphMap() {
        return new GraphMap();
    }

    /**
     * Create an instance of {@link Patterns }
     * 
     */
    public Patterns createPatterns() {
        return new Patterns();
    }

    /**
     * Create an instance of {@link GraphMaps }
     * 
     */
    public GraphMaps createGraphMaps() {
        return new GraphMaps();
    }

    /**
     * Create an instance of {@link RoleMaps }
     * 
     */
    public RoleMaps createRoleMaps() {
        return new RoleMaps();
    }

    /**
     * Create an instance of {@link ValueListMap }
     * 
     */
    public ValueListMap createValueListMap() {
        return new ValueListMap();
    }

    /**
     * Create an instance of {@link TemplateMapList }
     * 
     */
    public TemplateMapList createTemplateMapList() {
        return new TemplateMapList();
    }

    /**
     * Create an instance of {@link TemplateMaps }
     * 
     */
    public TemplateMaps createTemplateMaps() {
        return new TemplateMaps();
    }

    /**
     * Create an instance of {@link RoleList }
     * 
     */
    public RoleList createRoleList() {
        return new RoleList();
    }

    /**
     * Create an instance of {@link RoleMap }
     * 
     */
    public RoleMap createRoleMap() {
        return new RoleMap();
    }

    /**
     * Create an instance of {@link Mapping }
     * 
     */
    public Mapping createMapping() {
        return new Mapping();
    }

    /**
     * Create an instance of {@link ClassMap }
     * 
     */
    public ClassMap createClassMap() {
        return new ClassMap();
    }

    /**
     * Create an instance of {@link ClassTemplateMap }
     * 
     */
    public ClassTemplateMap createClassTemplateMap() {
        return new ClassTemplateMap();
    }

    /**
     * Create an instance of {@link ValueListMaps }
     * 
     */
    public ValueListMaps createValueListMaps() {
        return new ValueListMaps();
    }

    /**
     * Create an instance of {@link ClassesList }
     * 
     */
    public ClassesList createClassesList() {
        return new ClassesList();
    }

    /**
     * Create an instance of {@link Identifiers }
     * 
     */
    public Identifiers createIdentifiers() {
        return new Identifiers();
    }

    /**
     * Create an instance of {@link Ordinal }
     * 
     */
    public Ordinal createOrdinal() {
        return new Ordinal();
    }

    /**
     * Create an instance of {@link Classes }
     * 
     */
    public Classes createClasses() {
        return new Classes();
    }

    /**
     * Create an instance of {@link PatternsList }
     * 
     */
    public PatternsList createPatternsList() {
        return new PatternsList();
    }

    /**
     * Create an instance of {@link ValueMap }
     * 
     */
    public ValueMap createValueMap() {
        return new ValueMap();
    }

    /**
     * Create an instance of {@link ClassTemplateMaps }
     * 
     */
    public ClassTemplateMaps createClassTemplateMaps() {
        return new ClassTemplateMaps();
    }

    /**
     * Create an instance of {@link TemplateMap }
     * 
     */
    public TemplateMap createTemplateMap() {
        return new TemplateMap();
    }

    /**
     * Create an instance of {@link Template }
     * 
     */
    public Template createTemplate() {
        return new Template();
    }

    /**
     * Create an instance of {@link ValueMaps }
     * 
     */
    public ValueMaps createValueMaps() {
        return new ValueMaps();
    }

}
